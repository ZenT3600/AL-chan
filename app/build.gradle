apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.apollographql.apollo'
apply plugin: "de.mannodermaus.android-junit5"

android {
    compileSdkVersion 31
    defaultConfig {
        applicationId "it.matteoleggio.alsama"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 7
        versionName "Akio Fudou"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'com.google.android:flexbox:2.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Google Material
    implementation 'com.google.android.material:material:1.2.1'

    // JUnit4 for Instrumentation Test
    androidTestImplementation 'junit:junit:4.12'

    // AndroidX Test
    def androidx_test_version = "1.2.0"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"

    // Architecture Components Test
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"

    // JUnit5 for Local Unit Test
    def junit_jupiter_version = "5.6.2"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_jupiter_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"

    // Mockito
    testImplementation 'org.mockito:mockito-core:2.19.0'

    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'

    // LiveData and ViewModel
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"

    // Gson
    implementation 'com.google.code.gson:gson:2.8.6'

    // Glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // Apollo
    implementation "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-rx2-support:$apollo_version"
    compileOnly "org.jetbrains:annotations:13.0"
    testCompileOnly "org.jetbrains:annotations:13.0"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    // Koin DI
    implementation "org.koin:koin-androidx-viewmodel:2.0.1"

    // Firebase
    implementation 'com.google.firebase:firebase-analytics:17.6.0'
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'
    implementation 'com.google.firebase:firebase-messaging:20.3.0'
    implementation 'com.google.firebase:firebase-database:19.5.0'

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:2.4.0"

    // Others
    implementation 'com.jaredrummler:colorpicker:1.1.0'
    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.19'
    implementation 'com.github.zend10:OverlapImageListView:v1.0.1'
    implementation 'com.github.sephiroth74:android-target-tooltip:2.0.4'
    implementation 'com.crystal:crystalrangeseekbar:1.1.3'

    def markwon_version = "4.4.0"
    implementation "io.noties.markwon:core:$markwon_version"
    implementation "io.noties.markwon:image:$markwon_version"
    implementation "io.noties.markwon:image-glide:$markwon_version"
    implementation "io.noties.markwon:html:$markwon_version"
    implementation "io.noties.markwon:ext-strikethrough:$markwon_version"
    implementation "io.noties.markwon:inline-parser:$markwon_version"

    // debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'

    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation 'com.kcthota:emoji4j:6.0'
}

apollo {
    customTypeMapping = [
            "Json"       : "java.lang.Object",
            "CountryCode": "kotlin.String"
    ]
    generateKotlinModels.set(true)
}
